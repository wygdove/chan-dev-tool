package com.cmi.__project__.csf.impl;

import com.ai.appframe2.service.ServiceFactory;
import com.alibaba.fastjson.JSON;
import com.cmi.common.domain.PageResult;
import com.cmi.common.domain.Response;
import com.cmi.__project__.business.interfaces.I__SvKey__BizSV;
import com.cmi.__project__.constants.ExceptCodeConstants;
import com.cmi.__project__.csf.interfaces.I__SvKey__CSV;
import com.cmi.__project__.domain.__svkey__.params.Query__SvKey__Request;
import com.cmi.__project__.domain.__svkey__.params.Save__SvKey__Request;
import com.cmi.__project__.domain.__svkey__.vo.__SvKey__DetailVo;
import com.cmi.__project__.domain.__svkey__.vo.__SvKey__ItemVo;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;

/**
 * @Title:
 * @Description:
 * @Date:
 * @Author: __author__
 */
public class __SvKey__CSVImpl implements I__SvKey__CSV {
	private static Logger log=LoggerFactory.getLogger(__SvKey__CSVImpl.class);

	@Override
	public Response<String> add__SvKey__(Save__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.add__SvKey__ request: {}",JSON.toJSONString(request));
		Response<String> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.add__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.add__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.add__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<String> addBatch__SvKey__(Save__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.addBatch__SvKey__ request: {}",JSON.toJSONString(request));
		Response<String> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.addBatch__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.addBatch__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.addBatch__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<String> update__SvKey__(Save__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.update__SvKey__ request: {}",JSON.toJSONString(request));
		Response<String> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.update__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.update__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.update__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<String> delete__SvKey__(Save__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.delete__SvKey__ request: {}",JSON.toJSONString(request));
		Response<String> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.delete__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.delete__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.delete__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<__SvKey__DetailVo> queryDetail__SvKey__(Query__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.queryDetail__SvKey__ request: {}",JSON.toJSONString(request));
		Response<__SvKey__DetailVo> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.queryDetail__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.queryDetail__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.queryDetail__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<List<__SvKey__ItemVo>> queryList__SvKey__(Query__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.queryList__SvKey__ request: {}",JSON.toJSONString(request));
		Response<List<__SvKey__ItemVo>> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.queryList__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.queryList__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.queryList__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<PageResult<__SvKey__ItemVo>> queryPage__SvKey__(Query__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.queryPage__SvKey__ request: {}",JSON.toJSONString(request));
		Response<PageResult<__SvKey__ItemVo>> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.queryPage__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.queryPage__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.queryPage__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}

	@Override
	public Response<Long> count__SvKey__(Query__SvKey__Request request) throws Exception {
		log.info("__SvKey__CSVImpl.count__SvKey__ request: {}",JSON.toJSONString(request));
		Response<Long> response=new Response<>(true,ExceptCodeConstants.Special.SUCCESS,"操作成功");
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(ExceptCodeConstants.Special.PARAM_IS_NULL);
				response.setResultMessage("请求不能为空");
			} else {
				I__SvKey__BizSV __svKey__BizSV=(I__SvKey__BizSV)ServiceFactory.getService(I__SvKey__BizSV.class);
				response=__svKey__BizSV.count__SvKey__(request);
			}
		}catch(Exception e) {
			log.error("__SvKey__CSVImpl.count__SvKey__ error: {}",e.getMessage(),e);
			response.setSuccess(false);
			response.setResultCode(ExceptCodeConstants.Special.SYSTEM_ERROR);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__CSVImpl.count__SvKey__ response: {}",JSON.toJSONString(response));
		return response;
	}
}
