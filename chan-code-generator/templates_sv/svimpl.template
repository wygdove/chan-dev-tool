package com.ai.channel.__project__.api.__package__.impl;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.ai.channel.BusinessException;
import com.ai.channel.SystemException;
import com.ai.channel.__project__.api.__package__.interfaces.I__SvKey__SV;
import com.ai.channel.__project__.api.__package__.param.Query__SvKey__Request;
import com.ai.channel.__project__.api.__package__.param.Save__SvKey__Request;
import com.ai.channel.__project__.api.__package__.vo.__SvKey__DetailVo;
import com.ai.channel.__project__.api.__package__.vo.__SvKey__ItemVo;
import com.ai.channel.__project__.service.business.interfaces.I__SvKey__BusiSV;
import com.ai.channel.base.BusinessConstants;
import com.ai.channel.base.vo.BaseResponse;
import com.ai.channel.base.vo.PageResult;
import com.alibaba.dubbo.config.annotation.Service;
import com.alibaba.fastjson.JSON;

/**
 * __SvKey__SVImpl.java
 *
 *
 * @date
 * @author __author__
 */
@Service
@Component
public class __SvKey__SVImpl implements I__SvKey__SV {
	private static Logger log=LoggerFactory.getLogger(__SvKey__SVImpl.class);

	@Autowired
	I__SvKey__BusiSV __svKey__BusiSV;



	@Override
	public BaseResponse<String> add__SvKey__(Save__SvKey__Request request) throws BusinessException,SystemException {
		log.info("__SvKey__SVImpl.add__SvKey__ request"+JSON.toJSONString(request));
		BaseResponse<String> response=new BaseResponse<>(true,BusinessConstants.BUSI_SUCCESS_CODE,BusinessConstants.BUSI_SUCCESS_MESSAGE);
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
				response.setResultMessage("请求不能为空");
			} else {
				response=__svKey__BusiSV.add__SvKey__(request);
			}
		}catch(BusinessException|SystemException e) {
			log.error("__SvKey__SVImpl.add__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getErrorMessage());
		}catch(Exception e) {
			log.error("__SvKey__SVImpl.add__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__SVImpl.add__SvKey__ response"+JSON.toJSONString(response));
		return response;
	}

	@Override
	public BaseResponse<String> update__SvKey__(Save__SvKey__Request request) throws BusinessException,SystemException {
		log.info("__SvKey__SVImpl.update__SvKey__ request"+JSON.toJSONString(request));
		BaseResponse<String> response=new BaseResponse<>(true,BusinessConstants.BUSI_SUCCESS_CODE,BusinessConstants.BUSI_SUCCESS_MESSAGE);
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
				response.setResultMessage("请求不能为空");
			} else {
				response=__svKey__BusiSV.update__SvKey__(request);
			}
		}catch(BusinessException|SystemException e) {
			log.error("__SvKey__SVImpl.update__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getErrorMessage());
		}catch(Exception e) {
			log.error("__SvKey__SVImpl.update__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__SVImpl.update__SvKey__ response"+JSON.toJSONString(response));
		return response;
	}

	@Override
	public BaseResponse<String> delete__SvKey__(Save__SvKey__Request request) throws BusinessException,SystemException {
		log.info("__SvKey__SVImpl.delete__SvKey__ request"+JSON.toJSONString(request));
		BaseResponse<String> response=new BaseResponse<>(true,BusinessConstants.BUSI_SUCCESS_CODE,BusinessConstants.BUSI_SUCCESS_MESSAGE);
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
				response.setResultMessage("请求不能为空");
			} else {
				response=__svKey__BusiSV.delete__SvKey__(request);
			}
		}catch(BusinessException|SystemException e) {
			log.error("__SvKey__SVImpl.delete__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getErrorMessage());
		}catch(Exception e) {
			log.error("__SvKey__SVImpl.delete__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__SVImpl.delete__SvKey__ response"+JSON.toJSONString(response));
		return response;
	}



	@Override
	public BaseResponse<__SvKey__DetailVo> queryDetail__SvKey__(Query__SvKey__Request request) throws BusinessException,SystemException {
		log.info("__SvKey__SVImpl.queryDetail__SvKey__ request"+JSON.toJSONString(request));
		BaseResponse<__SvKey__DetailVo> response=new BaseResponse<>(true,BusinessConstants.BUSI_SUCCESS_CODE,BusinessConstants.BUSI_SUCCESS_MESSAGE);
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
				response.setResultMessage("请求不能为空");
			} else {
				response=__svKey__BusiSV.queryDetail__SvKey__(request);
			}
		}catch(BusinessException|SystemException e) {
			log.error("__SvKey__SVImpl.queryDetail__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getErrorMessage());
		}catch(Exception e) {
			log.error("__SvKey__SVImpl.queryDetail__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__SVImpl.queryDetail__SvKey__ response"+JSON.toJSONString(response));
		return response;
	}

	@Override
	public BaseResponse<List<__SvKey__ItemVo>> queryList__SvKey__(Query__SvKey__Request request) throws BusinessException,SystemException {
		log.info("__SvKey__SVImpl.queryList__SvKey__ request"+JSON.toJSONString(request));
		BaseResponse<List<__SvKey__ItemVo>> response=new BaseResponse<>(true,BusinessConstants.BUSI_SUCCESS_CODE,BusinessConstants.BUSI_SUCCESS_MESSAGE);
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
				response.setResultMessage("请求不能为空");
			} else {
				response=__svKey__BusiSV.queryList__SvKey__(request);
			}
		}catch(BusinessException|SystemException e) {
			log.error("__SvKey__SVImpl.queryList__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getErrorMessage());
		}catch(Exception e) {
			log.error("__SvKey__SVImpl.queryList__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__SVImpl.queryList__SvKey__ response"+JSON.toJSONString(response));
		return response;
	}

	@Override
	public BaseResponse<PageResult<__SvKey__ItemVo>> queryPage__SvKey__(Query__SvKey__Request request) throws BusinessException,SystemException {
		log.info("__SvKey__SVImpl.queryPage__SvKey__ request"+JSON.toJSONString(request));
		BaseResponse<PageResult<__SvKey__ItemVo>> response=new BaseResponse<>(true,BusinessConstants.BUSI_SUCCESS_CODE,BusinessConstants.BUSI_SUCCESS_MESSAGE);
		try {
			if(request==null) {
				response.setSuccess(false);
				response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
				response.setResultMessage("请求不能为空");
			} else {
				response=__svKey__BusiSV.queryPage__SvKey__(request);
			}
		}catch(BusinessException|SystemException e) {
			log.error("__SvKey__SVImpl.queryPage__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getErrorMessage());
		}catch(Exception e) {
			log.error("__SvKey__SVImpl.queryPage__SvKey__ error: "+e.getMessage());
			response.setSuccess(false);
			response.setResultCode(BusinessConstants.BUSI_FAILURE_CODE);
			response.setResultMessage(e.getMessage());
		}
		log.info("__SvKey__SVImpl.queryPage__SvKey__ response"+JSON.toJSONString(response));
		return response;
	}

}