package com.asiainfo.grid.sop.manage.controller.__package__;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import com.ai.channel.base.BusinessConstants;
import com.ai.channel.base.vo.PageResult;
import com.asiainfo.boot.core.model.AjaxResult;
import com.asiainfo.grid.sop.base.model.UserSessionModel;
import com.asiainfo.grid.sop.manage.model.__package__.__SvKey__QueryRequest;
import com.asiainfo.grid.sop.manage.model.__package__.__SvKey__SaveRequest;
import com.asiainfo.grid.sop.manage.model.__package__.__SvKey__VO;
import com.asiainfo.grid.sop.manage.service.I__SvKey__Service;
import com.asiainfo.grid.sop.manage.utils.TokenUtil;
import com.alibaba.fastjson.JSON;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * __SvKey__Controller.java
 * 
 * 
 * @date 
 * @author __author__
 */
@Controller
@RequestMapping("/__svkey__")
public class __SvKey__Controller {
	private static final Logger log=LoggerFactory.getLogger(__SvKey__Controller.class);

    @Resource
    private I__SvKey__Service __svKey__Service;

	
	@RequestMapping("__svKey__Save")
    @ResponseBody
    public Object __svKey__Save(HttpServletRequest request,__SvKey__SaveRequest saveRequest) {
    	log.info("controller:/__svkey__/__svKey__Save");
        UserSessionModel user=TokenUtil.getUser(request);
        if(user==null) {
            return AjaxResult.markNoLogin();
        }
		if(log.isInfoEnabled()) log.info("/__svkey__/save saveRequest: {}",JSON.toJSONString(saveRequest));
		String response=null;
		if(StringUtil.isBlank(saveRequest.getId())) {
			response=__svKey__Service.add__SvKey__(saveRequest);
		}else {
			response=__svKey__Service.update__SvKey__(saveRequest);
		}
		if(log.isInfoEnabled()) log.info("/__svkey__/__svKey__Save response: {}",JSON.toJSONString(response));
    	if(response!=null) {
            return AjaxResult.markSuccess(response);
        }
        return AjaxResult.markError(BusinessConstants.BUSI_FAILURE_MESSAGE);
    }
	
	
	@RequestMapping("__svKey__Delete")
    @ResponseBody
    public Object __svKey__Delete(HttpServletRequest request,__SvKey__SaveRequest saveRequest) {
    	log.info("controller:/__svkey__/__svKey__Delete");
        UserSessionModel user=TokenUtil.getUser(request);
        if(user==null) {
            return AjaxResult.markNoLogin();
        }
		if(log.isInfoEnabled()) log.info("/__svkey__/__svKey__Delete saveRequest: {}",JSON.toJSONString(saveRequest));
		String response=__svKey__Service.delete__SvKey__(saveRequest);
		if(log.isInfoEnabled()) log.info("/__svkey__/__svKey__Delete response: {}",JSON.toJSONString(response));
    	if(response!=null) {
            return AjaxResult.markSuccess(response);
        }
        return AjaxResult.markError(BusinessConstants.BUSI_FAILURE_MESSAGE);
    }
	
	
	@RequestMapping("query__SvKey__Detail")
    @ResponseBody
    public Object query__SvKey__Detail(HttpServletRequest request,__SvKey__QueryRequest queryRequest) {
    	log.info("controller:/__svkey__/query__SvKey__Detail");
		if(log.isInfoEnabled()) log.info("/__svkey__/query__SvKey__Detail queryRequest: {}",JSON.toJSONString(queryRequest));
		__SvKey__VO response=__svKey__Service.queryDetail__SvKey__(queryRequest);
		if(log.isInfoEnabled()) log.info("/__svkey__/query__SvKey__Detail response: {}",JSON.toJSONString(response));
    	if(response!=null) {
            return AjaxResult.markSuccess(response);
        }
        return AjaxResult.markError(BusinessConstants.BUSI_FAILURE_MESSAGE);
    }
	
	
	@RequestMapping("query__SvKey__PageList")
    @ResponseBody
    public Object query__SvKey__PageList(HttpServletRequest request,__SvKey__QueryRequest queryRequest) {
    	log.info("controller:/__svkey__/query__SvKey__PageList");
        UserSessionModel user=TokenUtil.getUser(request);
        if(user==null) {
            return AjaxResult.markNoLogin();
        }
        if(queryRequest==null) {
            return AjaxResult.markError("请求不能为空");
        }
        if(queryRequest.getPageNo()==null||queryRequest.getPageNo()<=0||queryRequest.getPageSize()==null||queryRequest.getPageSize()<=0) {
            return AjaxResult.markError("分页参数不能为空");
        }
        if(!"1".equalsIgnoreCase(request.getParameter("isFilterUserRight"))) {
            this.setQueryUser(user,queryRequest);
        }
		if(log.isInfoEnabled()) log.info("/__svkey__/query__SvKey__PageList queryRequest: {}",JSON.toJSONString(queryRequest));
		PageResult<__SvKey__VO> response=__svKey__Service.queryPage__SvKey__(queryRequest);
		if(log.isInfoEnabled()) log.info("/__svkey__/query__SvKey__PageList response: {}",JSON.toJSONString(response));
    	if(response!=null) {
            return AjaxResult.markSuccess(response);
        }
        return AjaxResult.markError(BusinessConstants.BUSI_FAILURE_MESSAGE);
    }

	@RequestMapping("query__SvKey__List")
    @ResponseBody
    public Object query__SvKey__List(HttpServletRequest request,__SvKey__QueryRequest queryRequest) {
    	log.info("controller:/__svkey__/query__SvKey__List");
        UserSessionModel user=TokenUtil.getUser(request);
        if(user==null) {
            return AjaxResult.markNoLogin();
        }
        if(!"1".equalsIgnoreCase(request.getParameter("isFilterUserRight"))) {
            this.setQueryUser(user,queryRequest);
        }
		if(log.isInfoEnabled()) log.info("/__svkey__/query__SvKey__List queryList: {}",JSON.toJSONString(queryRequest));
		List<__SvKey__VO> response=__svKey__Service.queryList__SvKey__(queryRequest);
		if(log.isInfoEnabled()) log.info("/__svkey__/query__SvKey__List response: {}",JSON.toJSONString(response));
    	if(response!=null) {
            return AjaxResult.markSuccess(response);
        }
        return AjaxResult.markError(BusinessConstants.BUSI_FAILURE_MESSAGE);
    }

    @RequestMapping("count__SvKey__")
    @ResponseBody
    public Object count__SvKey__(HttpServletRequest request,__SvKey__QueryRequest queryRequest) {
        log.info("controller:/__svkey__/count__SvKey__");
        UserSessionModel user=TokenUtil.getUser(request);
        if(user==null) {
            return AjaxResult.markNoLogin();
        }
        if(!"1".equalsIgnoreCase(request.getParameter("isFilterUserRight"))) {
            this.setQueryUser(user,queryRequest);
        }
        if(log.isInfoEnabled()) log.info("/__svkey__/count__SvKey__ queryList: {}",JSON.toJSONString(queryRequest));
        Long response=__svKey__Service.count__SvKey__(queryRequest);
        if(log.isInfoEnabled()) log.info("/__svkey__/count__SvKey__ response: {}",JSON.toJSONString(response));
    	if(response!=null) {
            return AjaxResult.markSuccess(response);
        }
        return AjaxResult.markError(BusinessConstants.BUSI_FAILURE_MESSAGE);
    }

	private __SvKey__QueryRequest setQueryUser(UserSessionModel user,__SvKey__QueryRequest request) {
        SysUserRightsVo userRights=TokenUtil.getUserRights(user);
		if(log.isInfoEnabled()) log.info("/__svkey__/setQueryUser userRights: {}",JSON.toJSONString(userRights));
		return request;
	}


}
