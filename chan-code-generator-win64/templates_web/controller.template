package com.ai.channel.__project__.web.controller.__package__;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ai.channel.base.BusinessConstants;
import com.ai.channel.base.vo.BaseResponse;
import com.ai.channel.base.vo.PageArg;
import com.ai.channel.base.vo.PageResult;
import com.ai.channel.common.dubbo.util.DubboConsumerFactory;
import com.ai.channel.common.util.CollectionUtil;
import com.ai.channel.__project__.api.__package__.interfaces.I__SvKey__SV;
import com.ai.channel.__project__.api.__package__.param.Query__SvKey__Request;
import com.ai.channel.__project__.api.__package__.param.Save__SvKey__Request;
import com.ai.channel.__project__.api.__package__.vo.__SvKey__DetailVo;
import com.ai.channel.__project__.api.__package__.vo.__SvKey__ItemVo;
import com.ai.channel.__project__.web.utils.SessionUserUtil;
import com.ai.channel.sso.module.SessionUser;
import com.alibaba.fastjson.JSON;

/**
 * __SvKey__Controller.java
 * 
 * 
 * @date 
 * @author wygdove
 */
@Controller
@RequestMapping("/__svkey__")
public class __SvKey__Controller {
	private static final Logger log=LoggerFactory.getLogger(__SvKey__Controller.class);
	
	@RequestMapping("/index")
    public String toIndex(HttpServletRequest request,Model model) {
    	log.info("controller:/__svkey__/index");
    	return "__svkey__/index";
    }
	
	@RequestMapping("/toSave")
    public String toSave(HttpServletRequest request,Model model) {
    	log.info("controller:/__svkey__/toSave");
    	String itemId=request.getParameter("itemId");
    	itemId=StringUtils.isBlank(itemId)?"":itemId;
    	log.info("/__svkey__/toSave itemId:"+JSON.toJSONString(itemId));
    	model.addAttribute("itemId",itemId);
    	return "__svkey__/save";
    }
	
	@RequestMapping("/toDetail")
	public String toDetail(HttpServletRequest request,Model model) {
		log.info("controller:/__svkey__/toDetail");
		String itemId=request.getParameter("itemId");
		itemId=StringUtils.isBlank(itemId)?"":itemId;
		log.info("/__svkey__/toDetail itemId:"+JSON.toJSONString(itemId));
		model.addAttribute("itemId",itemId);
		return "__svkey__/detail";
	}
	
	
	
	@RequiresPermissions("__project__:__svkey__:save")
	@RequestMapping("save")
    @ResponseBody
    public BaseResponse<String> save(HttpServletRequest request,Save__SvKey__Request saveRequest) {
    	log.info("controller:/__svkey__/save");
    	BaseResponse<String> response=new BaseResponse<>();
    	I__SvKey__SV __svKey__SV=DubboConsumerFactory.getService(I__SvKey__SV.class);
    	SessionUser sessionUser=SessionUserUtil.getSessionUser();
    	saveRequest.setUserId(sessionUser.getUserName());
		log.info("/__svkey__/save saveRequest:"+JSON.toJSONString(saveRequest));
		String recordFlag="";
		if(StringUtils.isBlank(saveRequest.getGridId())) {
			response=__svKey__SV.add__SvKey__(saveRequest);
		}else {
			response=__svKey__SV.update__SvKey__(saveRequest);
		}
		log.info("/__svkey__/save response:"+JSON.toJSONString(response));
    	return response;
    }
	
	
	@RequiresPermissions("__project__:__svkey__:save")
	@RequestMapping("delete")
    @ResponseBody
    public BaseResponse<String> delete(HttpServletRequest request,Save__SvKey__Request saveRequest) {
    	log.info("controller:/__svkey__/delete");
    	I__SvKey__SV __svKey__SV=DubboConsumerFactory.getService(I__SvKey__SV.class);
    	SessionUser sessionUser=SessionUserUtil.getSessionUser();
    	saveRequest.setUserId(sessionUser.getUserName());
    	saveRequest.setDelflag(""+GisConstants.GridDelFlag.DEL_YES);
		log.info("/__svkey__/delete saveRequest:"+JSON.toJSONString(saveRequest));
		BaseResponse<String> response=__svKey__SV.delete__SvKey__(saveRequest);
		log.info("/__svkey__/delete response:"+JSON.toJSONString(response));
    	return response;
    }
	
	
	@RequestMapping("queryDetail")
    @ResponseBody
    public BaseResponse<__SvKey__DetailVo> queryDetail(HttpServletRequest request,String __svkey__Id) {
    	log.info("controller:/__svkey__/queryDetail");
    	I__SvKey__SV __svKey__SV=DubboConsumerFactory.getService(I__SvKey__SV.class);
    	Query__SvKey__Request queryRequest=new Query__SvKey__Request();
//    	queryRequest.setId("id");
		log.info("/__svkey__/queryDetail queryRequest:"+JSON.toJSONString(queryRequest));
		BaseResponse<__SvKey__DetailVo> response=__svKey__SV.queryDetail__SvKey__(queryRequest);
		log.info("/__svkey__/queryDetail response:"+JSON.toJSONString(response));
    	return response;
    }
	
	
	@RequestMapping("queryPageList")
    @ResponseBody
    public BaseResponse<PageResult<__SvKey__ItemVo>> queryPageList(HttpServletRequest request,Query__SvKey__Request queryRequest) {
    	log.info("controller:/__svkey__/queryPageList");
    	SessionUser sessionUser=SessionUserUtil.getSessionUser();
		queryRequest=this.setQueryUser(sessionUser,queryRequest);
		if(queryRequest==null) {
			return new BaseResponse<>(false,BusinessConstants.BUSI_FAILURE_CODE,"错误：用户没有权限！");
		}
    	I__SvKey__SV __svKey__SV=DubboConsumerFactory.getService(I__SvKey__SV.class);
    	int pageNo=1,pageSize=5;
        try{ pageNo=Integer.parseInt(request.getParameter("pageNo"));
        	pageSize=Integer.parseInt(request.getParameter("pageSize"));
        }catch(Exception e) {pageNo=1;pageSize=5;}
		queryRequest.setPage(new PageArg(pageNo,pageSize));
		log.info("/__svkey__/queryPageList queryRequest:"+JSON.toJSONString(queryRequest));
		BaseResponse<PageResult<__SvKey__ItemVo>> response=__svKey__SV.queryPage__SvKey__(queryRequest);
		log.info("/__svkey__/queryPageList response:"+JSON.toJSONString(response));
    	return response;
    }
	@RequestMapping("queryList")
    @ResponseBody
    public BaseResponse<List<__SvKey__ItemVo>> queryList(HttpServletRequest request,Query__SvKey__Request queryRequest) {
    	log.info("controller:/__svkey__/queryList");
    	I__SvKey__SV __svKey__SV=DubboConsumerFactory.getService(I__SvKey__SV.class);
    	SessionUser sessionUser=SessionUserUtil.getSessionUser();
		queryRequest=this.setQueryUser(sessionUser,queryRequest);
		log.info("/__svkey__/queryPageList queryList:"+JSON.toJSONString(queryRequest));
		BaseResponse<List<__SvKey__ItemVo>> response=__svKey__SV.queryList__SvKey__(queryRequest);
		log.info("/__svkey__/queryPageList response:"+JSON.toJSONString(response));
    	return response;
    }
	private Query__SvKey__Request setQueryUser(SessionUser sessionUser,Query__SvKey__Request request) {
		List<UserBusiAreaVO> userBusiRegList=sessionUser.getUserBusiRegList();
		log.info("/__svkey__/setQueryUser userBusiRegList:"+JSON.toJSONString(userBusiRegList));
		List<String> rolenames=sessionUser.getRolenames();
		log.info("/__svkey__/setQueryUser rolenames:"+JSON.toJSONString(rolenames));
		if(!CollectionUtil.isEmpty(userBusiRegList)&&!CollectionUtil.isEmpty(rolenames)) {
			
		}else {
			request=null;
		}
		return request;
	}


}
